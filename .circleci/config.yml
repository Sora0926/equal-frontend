version: 2.1

executors:
  node-executor:
    docker:
      - image: circleci/node:latest
    resource_class: large
    parallelism: 10
  terraform-executor:
    docker:
      - image:  hiroga/terraform-gcp-ts

jobs:
  preview_deployment:
    executor: node-executor
    environment:
      VERCEL_ORG_ID: $VERCEL_ORG_ID
      VERCEL_PROJECT_ID: $VERCEL_PROJECT_ID
    steps:
      - checkout
      - restore_cache:
          name: Restore pnpm Package Cache
          keys:
            - pnpm-packages-{{ checksum "pnpm-lock.yaml" }}
      - run:
          name: Install pnpm package manager
          command: |
            corepack enable
            corepack prepare pnpm@latest-8 --activate
      - run:
          name: Install dependencies
          command: pnpm install --frozen-lockfile
      - save_cache:
          name: Save pnpm Package Cache
          key: pnpm-packages-{{ checksum "pnpm-lock.yaml" }}
          paths:
            - node_modules
      - run:
          name: Install Vercel CLI
          command: npm install --global vercel@latest
      - run:
          name: Pull Vercel Environment Information
          command: vercel pull --yes --environment=preview --token=$VERCEL_TOKEN
      - run:
          name: Build Project Artifacts
          command: vercel build --token=$VERCEL_TOKEN
      - run:
          name: Deploy Project Artifacts to Vercel
          command: vercel deploy --prebuilt --token=$VERCEL_TOKEN

    production_deployment:
      executor: terraform-executor
      steps:
        - checkout
        - restore_cache:
            name: Restore pnpm Package Cache
            keys:
              - pnpm-packages-{{ checksum "pnpm-lock.yaml" }}
        - run:
            name: Install pnpm package manager
            command: |
              corepack enable
              corepack prepare pnpm@latest-8 --activate
        - run:
            name: Install dependencies
            command: pnpm install --frozen-lockfile
        - save_cache:
            name: Save pnpm Package Cache
            key: pnpm-packages-{{ checksum "pnpm-lock.yaml" }}
            paths:
              - node_modules
        - run:
          name: create credential file for Terraform
          command: echo ${GCLOUD_SERVICE_KEY} > ./key.json
        - run:
          name: Cloud Function does not need node_modules
          command: |
            export GOOGLE_APPLICATION_CREDENTIALS="./key.json"
            export TF_VAR_GOOGLE_APPLICATION_CREDENTIALS=${GOOGLE_APPLICATION_CREDENTIALS}
            terraform init
            terraform apply -auto-approve -lock=false

workflows:
  version: 2
  preview_and_production:
      jobs:
        - preview_deployment:
            filters:
              branches:
                ignore: /master/
        - production_deployment:
            filters:
              branches:
                only: /master/
