name: Changesets
on:
  push:
    branches:
      - master
env:
  CI: true
  PNPM_CACHE_FOLDER: .pnpm-store

jobs:
  build:
    name: Version
    timeout-minutes: 15
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
        pnpm-version: [8]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/pnpm-lock.yaml" ]; then
            echo "manager=pnpm" >> $GITHUB_OUTPUT
            echo "command=install --frozen-lockfile" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=pnpm" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi
      - name: Setup pnpm ${{ matrix.pnpm-version }}
        uses: pnpm/action-setup@v2
        with:
          version: ${{ matrix.pnpm-version }}
      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: ${{ steps.detect-package-manager.outputs.manager }}
          cache-dependency-path: pnpm-lock.yaml
      - name: Setup npmrc
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc
      - name: Setup pnpm config
        run: pnpm config set store-dir $PNPM_CACHE_FOLDER
      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
      - name: create and publish versions
        uses: changesets/action@v1
        with:
          version: pnpm publish
          commit: "chore: update versions"
          title: "chore: update versions"
          publish: pnpm publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
